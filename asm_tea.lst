


ARM Macro Assembler    Page 1 


    1 00000000         ; TEA encryption and decryption implemented in assembly
    2 00000000         ;
    3 00000000         ; PARAMETERS
    4 00000000         ; R0  &KEY (128-bit)
    5 00000000         ; R1  &VALUE (64-bit)
    6 00000000         ;
    7 00000000         ; RETURN
    8 00000000         ; R0-R1 VALUE (64-bit)
    9 00000000         ;
   10 00000000         ; REGISTER MAP
   11 00000000         ; R0  D0
   12 00000000         ; R1  D1
   13 00000000         ; R2  
   14 00000000         ; R3  
   15 00000000         ; R4  COUNTER
   16 00000000         ; R5  T1
   17 00000000         ; R6  T2
   18 00000000         ; R7  T3
   19 00000000         ; R8  T4
   20 00000000         ; R9  &KEY
   21 00000000         ; R10  SUM
   22 00000000         ; R11  DELTA
   23 00000000         
   24 00000000                 AREA             ASM_TEA, CODE, READONLY
   25 00000000         
   26 00000000                 EXPORT           ASM_TEA_ENCRYPT
   27 00000000                 EXPORT           ASM_TEA_DECRYPT
   28 00000000         
   29 00000000 E92D 1FF0 
                       ASM_TEA_ENCRYPT
                               PUSH             {R4-R12}    ;Save previous regi
                                                            ster states
   30 00000004         
   31 00000004 F8DF B0D0       LDR              R11, =0x9E3779B9 ;Load DELTA
   32 00000008 4681            MOV              R9, R0      ;Load KEY parameter
                                                            
   33 0000000A C903            LDM              R1, {R0-R1} ;Load DATA paramete
                                                            r
   34 0000000C F04F 0420       MOV              R4, #32     ;Initialize COUNTER
                                                            
   35 00000010 F04F 0A00       LDR              R10, =0     ;Initialize SUM
   36 00000014         
   37 00000014 44DA    ENCRYPTLOOP
                               ADD              R10, R10, R11 ;Increment SUM by
                                                             DELTA
   38 00000016         
   39 00000016 EA4F 1501       LSL              R5, R1, #4  ;Calculate T1
   40 0000001A F8D9 2000       LDR              R2, [R9]
   41 0000001E 4415            ADD              R5, R5, R2
   42 00000020         
   43 00000020 EA4F 1651       LSR              R6, R1, #5  ;Calculate T2
   44 00000024 F8D9 2004       LDR              R2, [R9, #4]
   45 00000028 4416            ADD              R6, R6, R2
   46 0000002A         
   47 0000002A EB01 070A       ADD              R7, R1, R10 ;Calculate T3
   48 0000002E         
   49 0000002E EA85 0806       EOR              R8, R5, R6  ;Calculate T4
   50 00000032 EA88 0807       EOR              R8, R8, R7
   51 00000036         



ARM Macro Assembler    Page 2 


   52 00000036 4440            ADD              R0, R0, R8  ;Calculate D0   
   53 00000038         
   54 00000038 EA4F 1500       LSL              R5, R0, #4  ;Calculate T1 
   55 0000003C F8D9 2008       LDR              R2, [R9, #8]
   56 00000040 4415            ADD              R5, R5, R2
   57 00000042         
   58 00000042 EA4F 1650       LSR              R6, R0, #5  ;Calculate T2
   59 00000046 F8D9 200C       LDR              R2, [R9, #12]
   60 0000004A 4416            ADD              R6, R6, R2
   61 0000004C         
   62 0000004C EB00 070A       ADD              R7, R0, R10 ;Calculate T3
   63 00000050         
   64 00000050 EA85 0806       EOR              R8, R5, R6  ;Calculate T4
   65 00000054 EA88 0807       EOR              R8, R8, R7
   66 00000058         
   67 00000058 4441            ADD              R1, R1, R8  ;Calculate D1
   68 0000005A         
   69 0000005A F1A4 0401       SUB              R4, R4, #1  ;Check if we're don
                                                            e all iterations
   70 0000005E 2C00            CMP              R4, #0
   71 00000060 D1D8            BNE              ENCRYPTLOOP
   72 00000062         
   73 00000062 E8BD 1FF0       POP              {R4-R12}    ;Restore previous r
                                                            egister values
   74 00000066 4770            BX               LR
   75 00000068         
   76 00000068         
   77 00000068 E92D 1FF0 
                       ASM_TEA_DECRYPT
                               PUSH             {R4-R12}    ;Save previous regi
                                                            ster states
   78 0000006C         
   79 0000006C F8DF B068       LDR              R11, =0x9E3779B9 ;Load DELTA
   80 00000070 4681            MOV              R9, R0      ;Load KEY parameter
                                                            
   81 00000072 C903            LDM              R1, {R0-R1} ;Load DATA paramete
                                                            r
   82 00000074 F04F 0420       MOV              R4, #32     ;Initialize COUNTER
                                                            
   83 00000078 F8DF A060       LDR              R10, =0xC6EF3720 
                                                            ;Initialize SUM
   84 0000007C         
   85 0000007C         DECRYPTLOOP
   86 0000007C EA4F 1500       LSL              R5, R0, #4  ;Calculate T1
   87 00000080 F8D9 2008       LDR              R2, [R9, #8]
   88 00000084 4415            ADD              R5, R5, R2
   89 00000086         
   90 00000086 EA4F 1650       LSR              R6, R0, #5  ;Calculate T2
   91 0000008A F8D9 200C       LDR              R2, [R9, #12]
   92 0000008E 4416            ADD              R6, R6, R2
   93 00000090         
   94 00000090 EB00 070A       ADD              R7, R0, R10 ;Calculate T3
   95 00000094         
   96 00000094 EA85 0806       EOR              R8, R5, R6  ;Calculate T4
   97 00000098 EA88 0807       EOR              R8, R8, R7
   98 0000009C         
   99 0000009C EBA1 0108       SUB              R1, R1, R8  ;Calculate D0   
  100 000000A0         
  101 000000A0 EA4F 1501       LSL              R5, R1, #4  ;Calculate T1 



ARM Macro Assembler    Page 3 


  102 000000A4 F8D9 2000       LDR              R2, [R9]
  103 000000A8 4415            ADD              R5, R5, R2
  104 000000AA         
  105 000000AA EA4F 1651       LSR              R6, R1, #5  ;Calculate T2
  106 000000AE F8D9 2004       LDR              R2, [R9, #4]
  107 000000B2 4416            ADD              R6, R6, R2
  108 000000B4         
  109 000000B4 EB01 070A       ADD              R7, R1, R10 ;Calculate T3
  110 000000B8         
  111 000000B8 EA85 0806       EOR              R8, R5, R6  ;Calculate T4
  112 000000BC EA88 0807       EOR              R8, R8, R7
  113 000000C0         
  114 000000C0 EBA0 0008       SUB              R0, R0, R8  ;Calculate D1
  115 000000C4         
  116 000000C4 EBAA 0A0B       SUB              R10, R10, R11 ;Decrement SUM by
                                                             DELTA
  117 000000C8         
  118 000000C8 F1A4 0401       SUB              R4, R4, #1  ;Check if we're don
                                                            e all iterations
  119 000000CC 2C00            CMP              R4, #0
  120 000000CE D1D5            BNE              DECRYPTLOOP
  121 000000D0         
  122 000000D0 E8BD 1FF0       POP              {R4-R12}    ;Restore previous r
                                                            egister values
  123 000000D4 4770            BX               LR
  124 000000D6 00 00           ALIGN
  125 000000D8         
  126 000000D8                 END
              9E3779B9 
              C6EF3720 
Command Line: --debug --xref --cpu=Cortex-M4.fp --apcs=interwork --depend=.\obj
ects\asm_tea.d -o.\objects\asm_tea.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS
\Include -IC:\Keil\ARM\Inc\ST\STM32F4xx --predefine="__EVAL SETA 1" --list=.\as
m_tea.lst ASM_TEA.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASM_TEA 00000000

Symbol: ASM_TEA
   Definitions
      At line 24 in file ASM_TEA.s
   Uses
      None
Comment: ASM_TEA unused
ASM_TEA_DECRYPT 00000068

Symbol: ASM_TEA_DECRYPT
   Definitions
      At line 77 in file ASM_TEA.s
   Uses
      At line 27 in file ASM_TEA.s
Comment: ASM_TEA_DECRYPT used once
ASM_TEA_ENCRYPT 00000000

Symbol: ASM_TEA_ENCRYPT
   Definitions
      At line 29 in file ASM_TEA.s
   Uses
      At line 26 in file ASM_TEA.s
Comment: ASM_TEA_ENCRYPT used once
DECRYPTLOOP 0000007C

Symbol: DECRYPTLOOP
   Definitions
      At line 85 in file ASM_TEA.s
   Uses
      At line 120 in file ASM_TEA.s
Comment: DECRYPTLOOP used once
ENCRYPTLOOP 00000014

Symbol: ENCRYPTLOOP
   Definitions
      At line 37 in file ASM_TEA.s
   Uses
      At line 71 in file ASM_TEA.s
Comment: ENCRYPTLOOP used once
5 symbols
339 symbols in table
